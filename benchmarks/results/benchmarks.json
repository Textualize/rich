{
    "benchmarks.ColorSuite.time_downgrade_to_eight_bit": {
        "code": "class ColorSuite:\n    def time_downgrade_to_eight_bit(self):\n        self.color.downgrade(ColorSystem.EIGHT_BIT)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuite.time_downgrade_to_eight_bit",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "9da5ad0b5cfed4def0fe21fbea49ad4605f84bae78c584d9178a6b21be58d506",
        "warmup_time": -1
    },
    "benchmarks.ColorSuite.time_downgrade_to_standard": {
        "code": "class ColorSuite:\n    def time_downgrade_to_standard(self):\n        self.color.downgrade(ColorSystem.STANDARD)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuite.time_downgrade_to_standard",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "431bf40cae6650c65cdc6da70528f559c2e902abe9370cb73780dac5b5ef6826",
        "warmup_time": -1
    },
    "benchmarks.ColorSuite.time_downgrade_to_windows": {
        "code": "class ColorSuite:\n    def time_downgrade_to_windows(self):\n        self.color.downgrade(ColorSystem.WINDOWS)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuite.time_downgrade_to_windows",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "fef8d3fdb69ece95d49b5637f9d69760e29819d2d6e65e53e62356fec2e11b91",
        "warmup_time": -1
    },
    "benchmarks.ColorSuiteCached.time_downgrade_to_eight_bit": {
        "code": "class ColorSuiteCached:\n    def time_downgrade_to_eight_bit(self):\n        self.color.downgrade(ColorSystem.EIGHT_BIT)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")\n        # Warm cache\n        self.color.downgrade(ColorSystem.EIGHT_BIT)\n        self.color.downgrade(ColorSystem.STANDARD)\n        self.color.downgrade(ColorSystem.WINDOWS)",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuiteCached.time_downgrade_to_eight_bit",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "5fdae4522a081f8212ac2d43d69bbc86b73876c4222f6ea36a80970afe663579",
        "warmup_time": -1
    },
    "benchmarks.ColorSuiteCached.time_downgrade_to_standard": {
        "code": "class ColorSuiteCached:\n    def time_downgrade_to_standard(self):\n        self.color.downgrade(ColorSystem.STANDARD)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")\n        # Warm cache\n        self.color.downgrade(ColorSystem.EIGHT_BIT)\n        self.color.downgrade(ColorSystem.STANDARD)\n        self.color.downgrade(ColorSystem.WINDOWS)",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuiteCached.time_downgrade_to_standard",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "3806eb6f32fcfc22ff57b23b1d09e25fc82c35a97183e285d257fb2e2b464f8f",
        "warmup_time": -1
    },
    "benchmarks.ColorSuiteCached.time_downgrade_to_windows": {
        "code": "class ColorSuiteCached:\n    def time_downgrade_to_windows(self):\n        self.color.downgrade(ColorSystem.WINDOWS)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")\n        # Warm cache\n        self.color.downgrade(ColorSystem.EIGHT_BIT)\n        self.color.downgrade(ColorSystem.STANDARD)\n        self.color.downgrade(ColorSystem.WINDOWS)",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuiteCached.time_downgrade_to_windows",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "2844899e3d81f71bd0b997401e1d300394b3ca130a056eb6b9aaca15ef07f39d",
        "warmup_time": -1
    },
    "benchmarks.PrettySuite.time_pretty": {
        "code": "class PrettySuite:\n    def time_pretty(self):\n        pretty = Pretty(snippets.PYTHON_DICT)\n        self.console.print(pretty)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )",
        "min_run_count": 2,
        "name": "benchmarks.PrettySuite.time_pretty",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "12ef039b78ab19f0024f810fc30791bfe497731139b30a8c8ea7aef36ef9fed2",
        "warmup_time": -1
    },
    "benchmarks.PrettySuite.time_pretty_indent_guides": {
        "code": "class PrettySuite:\n    def time_pretty_indent_guides(self):\n        pretty = Pretty(snippets.PYTHON_DICT, indent_guides=True)\n        self.console.print(pretty)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )",
        "min_run_count": 2,
        "name": "benchmarks.PrettySuite.time_pretty_indent_guides",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "27d39951a834104a09759cd0c9b1efe8570946400d606a04baad7b0e2355a259",
        "warmup_time": -1
    },
    "benchmarks.PrettySuite.time_pretty_justify_center": {
        "code": "class PrettySuite:\n    def time_pretty_justify_center(self):\n        pretty = Pretty(snippets.PYTHON_DICT, justify=\"center\")\n        self.console.print(pretty)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )",
        "min_run_count": 2,
        "name": "benchmarks.PrettySuite.time_pretty_justify_center",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "51fe6d435fa7bcd605b26131da960edffb88929baa7aca98c9b3f7b23364cb6f",
        "warmup_time": -1
    },
    "benchmarks.StyleSuite.time_parse_ansi": {
        "code": "class StyleSuite:\n    def time_parse_ansi(self):\n        Style.parse(\"red on blue\")\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.style1 = Style.parse(\"blue on red\")\n        self.style2 = Style.parse(\"green italic bold\")",
        "min_run_count": 2,
        "name": "benchmarks.StyleSuite.time_parse_ansi",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "ef195062397e8505c3a84b44f8357e0bf4e659abc9a92ae1028707afade51f8a",
        "warmup_time": -1
    },
    "benchmarks.StyleSuite.time_parse_hex": {
        "code": "class StyleSuite:\n    def time_parse_hex(self):\n        Style.parse(\"#f0f0f0 on #e2e28a\")\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.style1 = Style.parse(\"blue on red\")\n        self.style2 = Style.parse(\"green italic bold\")",
        "min_run_count": 2,
        "name": "benchmarks.StyleSuite.time_parse_hex",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "9077fcf6d594cd70a2eaeb984a0af1d8086f9ee865a4edffc0e00e7cec66963d",
        "warmup_time": -1
    },
    "benchmarks.StyleSuite.time_parse_mixed_complex_style": {
        "code": "class StyleSuite:\n    def time_parse_mixed_complex_style(self):\n        Style.parse(\"dim bold reverse #00ee00 on rgb(123,12,50)\")\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.style1 = Style.parse(\"blue on red\")\n        self.style2 = Style.parse(\"green italic bold\")",
        "min_run_count": 2,
        "name": "benchmarks.StyleSuite.time_parse_mixed_complex_style",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "1494bc2364e167cce5ae6752fa198ce43b323d4955b6944b5640d33988cdcabc",
        "warmup_time": -1
    },
    "benchmarks.StyleSuite.time_style_add": {
        "code": "class StyleSuite:\n    def time_style_add(self):\n        self.style1 + self.style2\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.style1 = Style.parse(\"blue on red\")\n        self.style2 = Style.parse(\"green italic bold\")",
        "min_run_count": 2,
        "name": "benchmarks.StyleSuite.time_style_add",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "c5f2383878cc982ab31d2624f4de284dcc12c3c299c94c3b1fc1d698dd8d8260",
        "warmup_time": -1
    },
    "benchmarks.SyntaxWrappingSuite.time_text_thin_terminal_heavy_wrapping": {
        "code": "class SyntaxWrappingSuite:\n    def time_text_thin_terminal_heavy_wrapping(self):\n        self._print_with_width(20)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.syntax = Syntax(\n            code=snippets.PYTHON_SNIPPET, lexer=\"python\", word_wrap=True\n        )",
        "min_run_count": 2,
        "name": "benchmarks.SyntaxWrappingSuite.time_text_thin_terminal_heavy_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "bcf6771787d6f643c3a02ed76b9045b8c773101dd7d307f989596e535a1dc8fa",
        "warmup_time": -1
    },
    "benchmarks.SyntaxWrappingSuite.time_text_thin_terminal_medium_wrapping": {
        "code": "class SyntaxWrappingSuite:\n    def time_text_thin_terminal_medium_wrapping(self):\n        self._print_with_width(60)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.syntax = Syntax(\n            code=snippets.PYTHON_SNIPPET, lexer=\"python\", word_wrap=True\n        )",
        "min_run_count": 2,
        "name": "benchmarks.SyntaxWrappingSuite.time_text_thin_terminal_medium_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "df349deebd0cb3fe2602808efb2cc95270bdd3ff3734e07c13348039c5385ff9",
        "warmup_time": -1
    },
    "benchmarks.SyntaxWrappingSuite.time_text_wide_terminal_no_wrapping": {
        "code": "class SyntaxWrappingSuite:\n    def time_text_wide_terminal_no_wrapping(self):\n        self._print_with_width(100)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.syntax = Syntax(\n            code=snippets.PYTHON_SNIPPET, lexer=\"python\", word_wrap=True\n        )",
        "min_run_count": 2,
        "name": "benchmarks.SyntaxWrappingSuite.time_text_wide_terminal_no_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0af0a4fdbcad1978765c9980b246270adec7d7917b7fb7ce9f544a55892503c2",
        "warmup_time": -1
    },
    "benchmarks.TableSuite.time_table_heavy_wrapping": {
        "code": "class TableSuite:\n    def time_table_heavy_wrapping(self):\n        self._print_table(width=30)",
        "min_run_count": 2,
        "name": "benchmarks.TableSuite.time_table_heavy_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "ca515a9739c1e0f8eb922420f9f9caf27321fb13c8bd0bc49b207a0588b370de",
        "warmup_time": -1
    },
    "benchmarks.TableSuite.time_table_no_wrapping": {
        "code": "class TableSuite:\n    def time_table_no_wrapping(self):\n        self._print_table(width=100)",
        "min_run_count": 2,
        "name": "benchmarks.TableSuite.time_table_no_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "8842a5f141d8208ba2bab66e4973e978cb5d0615f326af5d70385ff8fa44b3b9",
        "warmup_time": -1
    },
    "benchmarks.TextHotCacheSuite.time_wrapping_unicode_heavy_warm_cache": {
        "code": "class TextHotCacheSuite:\n    def time_wrapping_unicode_heavy_warm_cache(self):\n        for _ in range(20):\n            Text(snippets.UNICODE_HEAVY_TEXT).wrap(self.console, 12, overflow=\"fold\")\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )",
        "min_run_count": 2,
        "name": "benchmarks.TextHotCacheSuite.time_wrapping_unicode_heavy_warm_cache",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "61a0be6fba20247e1a659912134e0628d062a6711afe7df190007679849f9585",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_align_center": {
        "code": "class TextSuite:\n    def time_align_center(self):\n        Text(snippets.LOREM_IPSUM).align(\"center\", width=self.len_lorem_ipsum * 3)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_align_center",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "a8b6e02d49879810e61cd70701e4a41a61682871ba4a4b2f4273ace0bdb1250b",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_align_center_unicode_heavy": {
        "code": "class TextSuite:\n    def time_align_center_unicode_heavy(self):\n        Text(snippets.UNICODE_HEAVY_TEXT).align(\n            \"center\", width=self.len_lorem_ipsum * 3\n        )\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_align_center_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "c65e269d15b432f2add210392f1126e0759c869fca2ae08729cf6baba45f3a15",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_divide": {
        "code": "class TextSuite:\n    def time_divide(self):\n        Text(snippets.LOREM_IPSUM).divide(range(20, 100, 4))\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_divide",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "11caa260e10d0b561700f4457776c1548091694f5939e1cb201f494c44988c67",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_divide_unicode_heavy": {
        "code": "class TextSuite:\n    def time_divide_unicode_heavy(self):\n        self.text.divide(range(20, 100, 4))\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_divide_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "44af19dfa643c363c09525d54342353925b59b3701794c06f5b056cd4cf85a72",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_fit": {
        "code": "class TextSuite:\n    def time_fit(self):\n        Text(snippets.LOREM_IPSUM).fit(12)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_fit",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "58c2358185e76c28a0552ba5bee2b9184fbaf918b9f34485b8940a971f166b38",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_fit_unicode_heavy": {
        "code": "class TextSuite:\n    def time_fit_unicode_heavy(self):\n        Text(snippets.UNICODE_HEAVY_TEXT).fit(12)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_fit_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "55d075d8f450b944e46b02814deedab2f4b05cb5550a2b4e0dcbb04dea51246b",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_indent_guides": {
        "code": "class TextSuite:\n    def time_indent_guides(self):\n        Text(snippets.PYTHON_SNIPPET).with_indent_guides()\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_indent_guides",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "a90fc2f17dbf830377011b10d0b9d263b6c7fc06215b9e47e264cd129851f421",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_render": {
        "code": "class TextSuite:\n    def time_render(self):\n        list(self.text.render(self.console))\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_render",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "4d859e28c2f3d6fd67f25a1d92b2b865110be2ad42b26faa6549816824f1d06b",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_render_unicode_heavy": {
        "code": "class TextSuite:\n    def time_render_unicode_heavy(self):\n        list(Text(snippets.UNICODE_HEAVY_TEXT).render(self.console))\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_render_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "4c10b25361392c9889c32587b68541e3dff0a4fe069405d7f5e5763deb07e3c1",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_split": {
        "code": "class TextSuite:\n    def time_split(self):\n        self.text.split()\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_split",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "cf8cd074f1b4bbd424d0cad4548c43a9cd19f7b5a8da2a1598bfa1cbaac5223c",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_split_unicode_heavy": {
        "code": "class TextSuite:\n    def time_split_unicode_heavy(self):\n        Text(snippets.UNICODE_HEAVY_TEXT).split()\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_split_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "33cad3b4a38b0ed37ade46bda66bc9e84e0f73e3519cc77ac02d7da5123a9137",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_wrapping": {
        "code": "class TextSuite:\n    def time_wrapping(self):\n        self.text.wrap(self.console, 12, overflow=\"fold\")\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "961df5c6a57de40e2a07182136f3644f42f1dcab1017b571383e5cb2b3dcbf46",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_wrapping_unicode_heavy": {
        "code": "class TextSuite:\n    def time_wrapping_unicode_heavy(self):\n        Text(snippets.UNICODE_HEAVY_TEXT).wrap(self.console, 12, overflow=\"fold\")\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)\n        self.text = Text.from_markup(snippets.MARKUP)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_wrapping_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0c9e448fb577a673d91bfd3d0da5ade88ee11474cf9113869e669cbc6cf4c444",
        "warmup_time": -1
    },
    "version": 2
}